# -*- coding: utf-8 -*-
"""bias_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pOOkU2mCqgZK4vCDxkqWdEFRlsl-a8Bl

# Import the libs needed to make everything work
"""

import tensorflow as tf
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from tensorflow.keras.utils import plot_model
import seaborn as sns
from sklearn.metrics import confusion_matrix
import numpy as np

"""# Pull data from files and use pands tro read json"""

data = pd.read_json('/content/merged_data.json')

"""# Seprate X and y using pandas"""

data

X = data.iloc[4].astype(str)
y = data.iloc[2].astype(int)

"""# Split the data"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""# use textvectortization to semi prep the text"""

text_vec = tf.keras.layers.TextVectorization(max_tokens=10000, output_mode='int')
text_vec.adapt(X_train)

sample_text = np.array(["This is a sample text."])
print(text_vec(sample_text))

"""# Build the model"""

X_train

tf.random.set_seed(42)

model = tf.keras.Sequential([
    tf.keras.layers.Input(shape=(1,), dtype=tf.string),
    text_vec,
    tf.keras.layers.Embedding(input_dim=len(text_vec.get_vocabulary()),
                              output_dim=64),
    tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(100)),
    tf.keras.layers.Dense(3, activation='softmax')
])

model.compile(loss=tf.keras.losses.SparseCategoricalCrossentropy(),
              optimizer=tf.keras.optimizers.Adam(),
              metrics=['accuracy'])

history = model.fit(X_train, y_train, epochs=10, batch_size=16, validation_data=(X_test, y_test))

